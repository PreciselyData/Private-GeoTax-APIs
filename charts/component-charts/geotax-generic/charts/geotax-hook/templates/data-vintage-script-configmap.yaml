{{- if .Values.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-config-map"
  labels:
    {{- include "geotax-hook.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/resource-policy": delete
data:
  data-vintage.sh: |
    #!/bin/bash
    
    mount_base_path="$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
    data_vintage_file="/tmp/$3"
    touch $data_vintage_file
    config_map_name=$4
    create_config_file() {
      search_dir=$1/$2
      cd $search_dir
      max_vintage=0
    
      for vintage in $(find $pwd -regex '^./[0-9]*$' -printf '%f\n')
      do
        if [ -d "${vintage}" ];then
        if [ $((vintage)) -gt ${max_vintage} ]; then
          max_vintage=$((vintage))
        fi
        fi
      done
      echo "maximum vintage: ${max_vintage}"
      echo "${4}.vintage=${search_dir}/${max_vintage}" >> $3
      cd ..
    }
    create_config_file $mount_base_path $2 $data_vintage_file geotax
    echo "$(cat $data_vintage_file)"
    echo "creating/updating config map: $config_map_name"
    kubectl create configmap $config_map_name --from-env-file=$data_vintage_file -o yaml --dry-run=client | kubectl apply -f -
{{- end}}